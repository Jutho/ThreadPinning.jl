var documenterSearchIndex = {"docs":
[{"location":"#ThreadPinning.jl","page":"ThreadPinning","title":"ThreadPinning.jl","text":"","category":"section"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"Interactively pin Julia threads to specific cores at runtime","category":"page"},{"location":"#Why-pin-Julia-threads?","page":"ThreadPinning","title":"Why pin Julia threads?","text":"","category":"section"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"Because","category":"page"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"it effects performance (MFlops/s), in particular on HPC clusters with multiple NUMA domains\nit allows you to measure hardware-performance counters in a reliable way\n...","category":"page"},{"location":"#Installation","page":"ThreadPinning","title":"Installation","text":"","category":"section"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"Note: Only Linux is supported! (macOS doesn't support thread pinning. Windows might or might not work.)","category":"page"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"The package is registered. Hence, you can simply use","category":"page"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"] add ThreadPinning","category":"page"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"to add the package to your Julia environment.","category":"page"},{"location":"#Example","page":"ThreadPinning","title":"Example","text":"","category":"section"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"The most important functions are pinthreads and threadinfo.","category":"page"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"(Dual-socket system with 20 cores per socket, julia -t 20)","category":"page"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"<img src=\"https://github.com/carstenbauer/ThreadPinning.jl/raw/main/docs/src/assets/threadinfo.png\" width=900px>","category":"page"},{"location":"#Without-color-support","page":"ThreadPinning","title":"Without color support","text":"","category":"section"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"julia> using ThreadPinning, Hwloc # Hwloc is optional\n\njulia> threadinfo(color=false)\n\n| 0,_,_,_,_,_,_,_,_,_,_,11,12,13,_,_,_,_,_,_ |\n| 20,21,22,23,24,25,26,27,28,_,30,31,32,33,34,35,_,37,_,_ |\n\n# = Julia thread, | = Package seperator\n\nJulia threads: 20\nOccupied cores: 20\nThread-Core mapping:\n  1 => 0,  2 => 26,  3 => 28,  4 => 12,  5 => 20,  ...\n\njulia> pinthreads(:compact)\n\njulia> threadinfo(color=false)\n\n| 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19 |\n| _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_ |\n\n# = Julia thread, | = Package seperator\n\nJulia threads: 20\nOccupied cores: 20\nThread-Core mapping:\n  1 => 0,  2 => 1,  3 => 2,  4 => 3,  5 => 4,  ...\n\njulia> pinthreads(:scatter)\n\njulia> threadinfo(color=false)\n\n| 0,1,2,3,4,5,6,7,8,9,_,_,_,_,_,_,_,_,_,_ |\n| 20,21,22,23,24,25,26,27,28,29,_,_,_,_,_,_,_,_,_,_ |\n\n# = Julia thread, | = Package seperator\n\nJulia threads: 20\nOccupied cores: 20\nThread-Core mapping:\n  1 => 0,  2 => 20,  3 => 1,  4 => 21,  5 => 2,  ...","category":"page"},{"location":"#Explanation","page":"ThreadPinning","title":"Explanation","text":"","category":"section"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"We use libc's sched_getcpu to query the CPU-core ID for a thread and libuv's uvthreadsetaffinity to set the affinity of a thread.","category":"page"},{"location":"#Noteworthy-Alternatives","page":"ThreadPinning","title":"Noteworthy Alternatives","text":"","category":"section"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"Setting JULIA_EXCLUSIVE=1 will make julia use compact pinning automatically (no external tool needed!)\npinthread / pinthreads or likwid-pin (CLI tool) from LIKWID.jl\nThis discourse thread discusses issues with alternatives like numactl","category":"page"},{"location":"#Acknowledgements","page":"ThreadPinning","title":"Acknowledgements","text":"","category":"section"},{"location":"","page":"ThreadPinning","title":"ThreadPinning","text":"CI infrastructure is provided by the Paderborn Center for Parallel Computing (PCÂ²)","category":"page"}]
}
